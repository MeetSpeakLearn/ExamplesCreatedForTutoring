' Â© 2023, Stephen DeVoy, All rights reserved.

GraphicsWindow.BackgroundColor = "Brown"
GraphicsWindow.FontName = "Arial"
GraphicsWindow.FontSize = 18
GraphicsWindow.FontBold = "true"
GraphicsWindow.BrushColor = "#FFFFFF"

gridX = 10
gridY = 20

generation = 1

columns = 40
rows = 40

DEAD = 0
ALIVE = 1

HowMuchLife = Math.Floor(columns * rows / 3)

For row = 1 to rows
    For column = 1 to columns
        state[row][column] = DEAD
    EndFor
EndFor

tableCellWidth = 10
tableCellHeight = 10


continue = "True"
anotherGeneration = "True"

userPrompt = "Run Game of Life?"
GetUserInput()

While continue = "True"
  GraphicsWindow.Show()
  LetThereBeLife()
  While continue = "True"
    DrawState()
    NextGeneration()
    userPrompt = "Next Generation?"
    GetUserInput()
  EndWhile
  userPrompt = "Run Game of Life?"
  GetUserInput()
EndWhile

Sub GetUserInput
  TextWindow.WriteLine(userPrompt)
  userInput = TextWindow.Read()
  If userInput = "Y" Or userInput = "y" Then
    continue = "True"
  Else
    continue = "False"
  EndIf
EndSub

Sub LetThereBeLife
    For i = 1 to HowMuchLife
        row = Math.GetRandomNumber(rows)
        column = Math.GetRandomNumber(columns)
        state[row][column] = ALIVE
    EndFor
EndSub

Sub CountNeighbors
    ' Relies on currentRow and currentColumn having been set before executing this subroutine.
    ' The count is returned by setting the variable neighborCount.
    left = Math.Max(0, currentColumn - 1)
    right = Math.Min(columns, currentColumn + 1)
    top = Math.Max(0, currentRow - 1)
    bottom = Math.Min(rows, currentRow + 1)
    neighborCount = 0
    For cnRow = top to bottom
        For cnColumn = left to right
            If cnRow <> currentRow And cnColumn <> currentColumn Then
                If state[cnRow][cnColumn] = ALIVE Then
                    neighborCount = neighborCount + 1
                EndIf
            EndIf
        EndFor
    EndFor
EndSub

Sub NextGeneration
  For row = 1 to rows
    currentRow = row
    For column = 1 to columns
      currentColumn = column
      CountNeighbors()
      stateAssessment[row][column] = neighborCount
    EndFor
  EndFor
  For row = 1 to rows
    For column = 1 to columns
      assessment = stateAssessment[row][column]
      If state[row][column] = ALIVE Then
        If assessment < 2 Then
          state[row][column] = DEAD
        ElseIf assessment = 2 Or assessment = 3 Then
          state[row][column] = ALIVE
	ElseIf essessment >= 3 Then
	  state[row][column] = DEAD
        EndIf
      ElseIf assessment = 3 Then
        state[row][column] = ALIVE
      EndIf
    EndFor
  EndFor
  generation = generation + 1
EndSub

Sub DrawState
  GraphicsWindow.Clear()
  GraphicsWindow.DrawText(0, 0, "Generation: " + generation)
  For y = 1 to rows
      For x = 1 to columns
     	   xDrawingPosition = tableCellWidth * x
           yDrawingPosition = tableCellHeight * y
           If (state[y][x] = ALIVE) Then
                symbol = "*"
           Else
                symbol = " "
           EndIf
           GraphicsWindow.DrawText(gridX + xDrawingPosition, gridY + yDrawingPosition, symbol)
      EndFor
  EndFor
EndSub
